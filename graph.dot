strict digraph deps {
"seminaire-diverse2017-servant" [style=dashed];
{rank=max; "array"; };
{rank=max; "binary"; };
{rank=max; "bytestring"; };
{rank=max; "containers"; };
{rank=max; "deepseq"; };
{rank=max; "directory"; };
{rank=max; "filepath"; };
{rank=max; "ghc-boot-th"; };
{rank=max; "nats"; };
{rank=max; "pretty"; };
{rank=max; "process"; };
{rank=max; "rts" [shape=box]; };
{rank=max; "time"; };
{rank=max; "transformers"; };
{rank=max; "unix"; };
"Cabal" -> "array";
"Cabal" -> "base";
"Cabal" -> "binary";
"Cabal" -> "bytestring";
"Cabal" -> "containers";
"Cabal" -> "deepseq";
"Cabal" -> "directory";
"Cabal" -> "filepath";
"Cabal" -> "pretty";
"Cabal" -> "process";
"Cabal" -> "time";
"Cabal" -> "unix";
"ParserFunction" -> "base";
"ParserFunction" -> "containers";
"ParserFunction" -> "parsec";
"Spock" -> "Spock-core";
"Spock" -> "base";
"Spock" -> "base64-bytestring";
"Spock" -> "bytestring";
"Spock" -> "containers";
"Spock" -> "cryptonite";
"Spock" -> "focus";
"Spock" -> "hashable";
"Spock" -> "http-types";
"Spock" -> "hvect";
"Spock" -> "list-t";
"Spock" -> "monad-control";
"Spock" -> "mtl";
"Spock" -> "reroute";
"Spock" -> "resource-pool";
"Spock" -> "resourcet";
"Spock" -> "stm";
"Spock" -> "stm-containers";
"Spock" -> "text";
"Spock" -> "time";
"Spock" -> "transformers";
"Spock" -> "transformers-base";
"Spock" -> "unordered-containers";
"Spock" -> "vault";
"Spock" -> "wai";
"Spock-core" -> "aeson";
"Spock-core" -> "base";
"Spock-core" -> "base64-bytestring";
"Spock-core" -> "bytestring";
"Spock-core" -> "case-insensitive";
"Spock-core" -> "containers";
"Spock-core" -> "cookie";
"Spock-core" -> "directory";
"Spock-core" -> "hashable";
"Spock-core" -> "http-api-data";
"Spock-core" -> "http-types";
"Spock-core" -> "hvect";
"Spock-core" -> "mtl";
"Spock-core" -> "old-locale";
"Spock-core" -> "reroute";
"Spock-core" -> "resourcet";
"Spock-core" -> "stm";
"Spock-core" -> "superbuffer";
"Spock-core" -> "text";
"Spock-core" -> "time";
"Spock-core" -> "transformers";
"Spock-core" -> "unordered-containers";
"Spock-core" -> "vault";
"Spock-core" -> "wai";
"Spock-core" -> "wai-extra";
"Spock-core" -> "warp";
"aeson" -> "attoparsec";
"aeson" -> "base";
"aeson" -> "base-compat";
"aeson" -> "bytestring";
"aeson" -> "containers";
"aeson" -> "deepseq";
"aeson" -> "dlist";
"aeson" -> "ghc-prim";
"aeson" -> "hashable";
"aeson" -> "scientific";
"aeson" -> "tagged";
"aeson" -> "template-haskell";
"aeson" -> "text";
"aeson" -> "time";
"aeson" -> "time-locale-compat";
"aeson" -> "unordered-containers";
"aeson" -> "uuid-types";
"aeson" -> "vector";
"aeson-compat" -> "aeson";
"aeson-compat" -> "attoparsec";
"aeson-compat" -> "base";
"aeson-compat" -> "base-compat";
"aeson-compat" -> "bytestring";
"aeson-compat" -> "containers";
"aeson-compat" -> "exceptions";
"aeson-compat" -> "hashable";
"aeson-compat" -> "nats";
"aeson-compat" -> "scientific";
"aeson-compat" -> "semigroups";
"aeson-compat" -> "tagged";
"aeson-compat" -> "text";
"aeson-compat" -> "time";
"aeson-compat" -> "time-locale-compat";
"aeson-compat" -> "unordered-containers";
"aeson-compat" -> "vector";
"async" -> "base";
"async" -> "stm";
"attoparsec" -> "array";
"attoparsec" -> "base";
"attoparsec" -> "bytestring";
"attoparsec" -> "containers";
"attoparsec" -> "deepseq";
"attoparsec" -> "scientific";
"attoparsec" -> "text";
"attoparsec" -> "transformers";
"attoparsec-iso8601" -> "attoparsec";
"attoparsec-iso8601" -> "base";
"attoparsec-iso8601" -> "base-compat";
"attoparsec-iso8601" -> "text";
"attoparsec-iso8601" -> "time";
"auto-update" -> "base";
"base" -> "ghc-prim";
"base" -> "integer-gmp";
"base" -> "rts";
"base-compat" -> "base";
"base-compat" -> "unix";
"base-prelude" -> "base";
"base64-bytestring" -> "base";
"base64-bytestring" -> "bytestring";
"blaze-builder" -> "base";
"blaze-builder" -> "bytestring";
"blaze-builder" -> "deepseq";
"blaze-builder" -> "text";
"blaze-html" -> "base";
"blaze-html" -> "blaze-builder";
"blaze-html" -> "blaze-markup";
"blaze-html" -> "bytestring";
"blaze-html" -> "text";
"blaze-markup" -> "base";
"blaze-markup" -> "blaze-builder";
"blaze-markup" -> "bytestring";
"blaze-markup" -> "text";
"bytestring-builder" -> "base";
"bytestring-builder" -> "bytestring";
"bytestring-builder" -> "deepseq";
"cabal-doctest" -> "Cabal";
"cabal-doctest" -> "base";
"cabal-doctest" -> "directory";
"cabal-doctest" -> "filepath";
"case-insensitive" -> "base";
"case-insensitive" -> "bytestring";
"case-insensitive" -> "deepseq";
"case-insensitive" -> "hashable";
"case-insensitive" -> "text";
"conduit" -> "base";
"conduit" -> "exceptions";
"conduit" -> "lifted-base";
"conduit" -> "mmorph";
"conduit" -> "monad-control";
"conduit" -> "mtl";
"conduit" -> "primitive";
"conduit" -> "resourcet";
"conduit" -> "transformers";
"conduit" -> "transformers-base";
"conduit" -> "transformers-compat";
"conduit-extra" -> "async";
"conduit-extra" -> "attoparsec";
"conduit-extra" -> "base";
"conduit-extra" -> "blaze-builder";
"conduit-extra" -> "bytestring";
"conduit-extra" -> "conduit";
"conduit-extra" -> "directory";
"conduit-extra" -> "exceptions";
"conduit-extra" -> "filepath";
"conduit-extra" -> "monad-control";
"conduit-extra" -> "network";
"conduit-extra" -> "primitive";
"conduit-extra" -> "process";
"conduit-extra" -> "resourcet";
"conduit-extra" -> "stm";
"conduit-extra" -> "streaming-commons";
"conduit-extra" -> "text";
"conduit-extra" -> "transformers";
"conduit-extra" -> "transformers-base";
"configurator" -> "attoparsec";
"configurator" -> "base";
"configurator" -> "bytestring";
"configurator" -> "directory";
"configurator" -> "hashable";
"configurator" -> "text";
"configurator" -> "unix-compat";
"configurator" -> "unordered-containers";
"cookie" -> "base";
"cookie" -> "blaze-builder";
"cookie" -> "bytestring";
"cookie" -> "data-default-class";
"cookie" -> "deepseq";
"cookie" -> "old-locale";
"cookie" -> "text";
"cookie" -> "time";
"cryptonite" -> "base";
"cryptonite" -> "bytestring";
"cryptonite" -> "deepseq";
"cryptonite" -> "foundation";
"cryptonite" -> "ghc-prim";
"cryptonite" -> "integer-gmp";
"cryptonite" -> "memory";
"dlist" -> "base";
"dlist" -> "deepseq";
"easy-file" -> "base";
"easy-file" -> "directory";
"easy-file" -> "filepath";
"easy-file" -> "time";
"easy-file" -> "unix";
"exceptions" -> "base";
"exceptions" -> "mtl";
"exceptions" -> "stm";
"exceptions" -> "template-haskell";
"exceptions" -> "transformers";
"exceptions" -> "transformers-compat";
"fast-logger" -> "array";
"fast-logger" -> "auto-update";
"fast-logger" -> "base";
"fast-logger" -> "bytestring";
"fast-logger" -> "directory";
"fast-logger" -> "easy-file";
"fast-logger" -> "filepath";
"fast-logger" -> "text";
"fast-logger" -> "unix";
"fast-logger" -> "unix-time";
"focus" -> "base";
"foundation" -> "base";
"foundation" -> "basement";
"foundation" -> "ghc-prim";
"ghc-prim" -> "rts";
"hashable" -> "base";
"hashable" -> "bytestring";
"hashable" -> "deepseq";
"hashable" -> "ghc-prim";
"hashable" -> "integer-gmp";
"hashable" -> "text";
"http-api-data" -> "Cabal";
"http-api-data" -> "attoparsec";
"http-api-data" -> "attoparsec-iso8601";
"http-api-data" -> "base";
"http-api-data" -> "bytestring";
"http-api-data" -> "cabal-doctest";
"http-api-data" -> "containers";
"http-api-data" -> "hashable";
"http-api-data" -> "http-types";
"http-api-data" -> "text";
"http-api-data" -> "time";
"http-api-data" -> "time-locale-compat";
"http-api-data" -> "unordered-containers";
"http-api-data" -> "uri-bytestring";
"http-api-data" -> "uuid-types";
"http-types" -> "array";
"http-types" -> "base";
"http-types" -> "blaze-builder";
"http-types" -> "bytestring";
"http-types" -> "case-insensitive";
"http-types" -> "text";
"hvect" -> "base";
"integer-gmp" -> "ghc-prim";
"integer-logarithms" -> "array";
"integer-logarithms" -> "base";
"integer-logarithms" -> "ghc-prim";
"integer-logarithms" -> "integer-gmp";
"lifted-base" -> "base";
"lifted-base" -> "monad-control";
"lifted-base" -> "transformers-base";
"list-t" -> "base";
"list-t" -> "base-prelude";
"list-t" -> "mmorph";
"list-t" -> "monad-control";
"list-t" -> "mtl";
"list-t" -> "transformers";
"list-t" -> "transformers-base";
"memory" -> "base";
"memory" -> "basement";
"memory" -> "bytestring";
"memory" -> "deepseq";
"memory" -> "ghc-prim";
"microlens" -> "base";
"microlens-th" -> "base";
"microlens-th" -> "containers";
"microlens-th" -> "microlens";
"microlens-th" -> "template-haskell";
"mmorph" -> "base";
"mmorph" -> "mtl";
"mmorph" -> "transformers";
"mmorph" -> "transformers-compat";
"monad-control" -> "base";
"monad-control" -> "stm";
"monad-control" -> "transformers";
"monad-control" -> "transformers-base";
"monad-control" -> "transformers-compat";
"monad-logger" -> "base";
"monad-logger" -> "blaze-builder";
"monad-logger" -> "bytestring";
"monad-logger" -> "conduit";
"monad-logger" -> "conduit-extra";
"monad-logger" -> "exceptions";
"monad-logger" -> "fast-logger";
"monad-logger" -> "lifted-base";
"monad-logger" -> "monad-control";
"monad-logger" -> "monad-loops";
"monad-logger" -> "mtl";
"monad-logger" -> "resourcet";
"monad-logger" -> "stm";
"monad-logger" -> "stm-chans";
"monad-logger" -> "template-haskell";
"monad-logger" -> "text";
"monad-logger" -> "transformers";
"monad-logger" -> "transformers-base";
"monad-logger" -> "transformers-compat";
"monad-loops" -> "base";
"mtl" -> "base";
"mtl" -> "transformers";
"network" -> "base";
"network" -> "bytestring";
"network" -> "unix";
"old-locale" -> "base";
"parsec" -> "base";
"parsec" -> "bytestring";
"parsec" -> "mtl";
"parsec" -> "text";
"path-pieces" -> "base";
"path-pieces" -> "text";
"path-pieces" -> "time";
"persistent" -> "aeson";
"persistent" -> "attoparsec";
"persistent" -> "base";
"persistent" -> "base64-bytestring";
"persistent" -> "blaze-html";
"persistent" -> "blaze-markup";
"persistent" -> "bytestring";
"persistent" -> "conduit";
"persistent" -> "containers";
"persistent" -> "exceptions";
"persistent" -> "fast-logger";
"persistent" -> "http-api-data";
"persistent" -> "lifted-base";
"persistent" -> "monad-control";
"persistent" -> "monad-logger";
"persistent" -> "mtl";
"persistent" -> "old-locale";
"persistent" -> "path-pieces";
"persistent" -> "resource-pool";
"persistent" -> "resourcet";
"persistent" -> "scientific";
"persistent" -> "silently";
"persistent" -> "tagged";
"persistent" -> "template-haskell";
"persistent" -> "text";
"persistent" -> "time";
"persistent" -> "transformers";
"persistent" -> "transformers-base";
"persistent" -> "unordered-containers";
"persistent" -> "vector";
"persistent-sqlite" -> "aeson";
"persistent-sqlite" -> "base";
"persistent-sqlite" -> "bytestring";
"persistent-sqlite" -> "conduit";
"persistent-sqlite" -> "containers";
"persistent-sqlite" -> "microlens-th";
"persistent-sqlite" -> "monad-control";
"persistent-sqlite" -> "monad-logger";
"persistent-sqlite" -> "old-locale";
"persistent-sqlite" -> "persistent";
"persistent-sqlite" -> "resource-pool";
"persistent-sqlite" -> "resourcet";
"persistent-sqlite" -> "text";
"persistent-sqlite" -> "time";
"persistent-sqlite" -> "transformers";
"persistent-sqlite" -> "unordered-containers";
"persistent-template" -> "aeson";
"persistent-template" -> "aeson-compat";
"persistent-template" -> "base";
"persistent-template" -> "bytestring";
"persistent-template" -> "containers";
"persistent-template" -> "ghc-prim";
"persistent-template" -> "http-api-data";
"persistent-template" -> "monad-control";
"persistent-template" -> "monad-logger";
"persistent-template" -> "path-pieces";
"persistent-template" -> "persistent";
"persistent-template" -> "tagged";
"persistent-template" -> "template-haskell";
"persistent-template" -> "text";
"persistent-template" -> "transformers";
"persistent-template" -> "unordered-containers";
"primitive" -> "base";
"primitive" -> "ghc-prim";
"primitive" -> "transformers";
"random" -> "base";
"random" -> "time";
"reroute" -> "base";
"reroute" -> "deepseq";
"reroute" -> "hashable";
"reroute" -> "http-api-data";
"reroute" -> "hvect";
"reroute" -> "mtl";
"reroute" -> "text";
"reroute" -> "unordered-containers";
"resource-pool" -> "base";
"resource-pool" -> "hashable";
"resource-pool" -> "monad-control";
"resource-pool" -> "stm";
"resource-pool" -> "time";
"resource-pool" -> "transformers";
"resource-pool" -> "transformers-base";
"resource-pool" -> "vector";
"resourcet" -> "base";
"resourcet" -> "containers";
"resourcet" -> "exceptions";
"resourcet" -> "lifted-base";
"resourcet" -> "mmorph";
"resourcet" -> "monad-control";
"resourcet" -> "mtl";
"resourcet" -> "transformers";
"resourcet" -> "transformers-base";
"resourcet" -> "transformers-compat";
"scientific" -> "base";
"scientific" -> "binary";
"scientific" -> "bytestring";
"scientific" -> "containers";
"scientific" -> "deepseq";
"scientific" -> "hashable";
"scientific" -> "integer-gmp";
"scientific" -> "integer-logarithms";
"scientific" -> "primitive";
"scientific" -> "text";
"semigroups" -> "base";
"seminaire-diverse2017-servant" -> "ParserFunction";
"seminaire-diverse2017-servant" -> "Spock";
"seminaire-diverse2017-servant" -> "aeson";
"seminaire-diverse2017-servant" -> "base";
"seminaire-diverse2017-servant" -> "configurator";
"seminaire-diverse2017-servant" -> "containers";
"seminaire-diverse2017-servant" -> "http-types";
"seminaire-diverse2017-servant" -> "monad-logger";
"seminaire-diverse2017-servant" -> "mtl";
"seminaire-diverse2017-servant" -> "persistent";
"seminaire-diverse2017-servant" -> "persistent-sqlite";
"seminaire-diverse2017-servant" -> "persistent-template";
"seminaire-diverse2017-servant" -> "resourcet";
"seminaire-diverse2017-servant" -> "scientific";
"seminaire-diverse2017-servant" -> "string-random";
"seminaire-diverse2017-servant" -> "text";
"seminaire-diverse2017-servant" -> "time";
"silently" -> "base";
"silently" -> "deepseq";
"silently" -> "directory";
"stm" -> "array";
"stm" -> "base";
"stm-chans" -> "base";
"stm-chans" -> "stm";
"stm-containers" -> "base";
"stm-containers" -> "base-prelude";
"stm-containers" -> "focus";
"stm-containers" -> "hashable";
"stm-containers" -> "list-t";
"stm-containers" -> "primitive";
"stm-containers" -> "transformers";
"streaming-commons" -> "array";
"streaming-commons" -> "async";
"streaming-commons" -> "base";
"streaming-commons" -> "blaze-builder";
"streaming-commons" -> "bytestring";
"streaming-commons" -> "directory";
"streaming-commons" -> "network";
"streaming-commons" -> "process";
"streaming-commons" -> "random";
"streaming-commons" -> "stm";
"streaming-commons" -> "text";
"streaming-commons" -> "transformers";
"streaming-commons" -> "unix";
"streaming-commons" -> "zlib";
"string-random" -> "attoparsec";
"string-random" -> "base";
"string-random" -> "containers";
"string-random" -> "random";
"string-random" -> "text";
"string-random" -> "transformers";
"superbuffer" -> "base";
"superbuffer" -> "bytestring";
"tagged" -> "base";
"tagged" -> "deepseq";
"tagged" -> "template-haskell";
"tagged" -> "transformers";
"tagged" -> "transformers-compat";
"template-haskell" -> "base";
"template-haskell" -> "ghc-boot-th";
"template-haskell" -> "pretty";
"text" -> "array";
"text" -> "base";
"text" -> "binary";
"text" -> "bytestring";
"text" -> "deepseq";
"text" -> "ghc-prim";
"text" -> "integer-gmp";
"time-locale-compat" -> "base";
"time-locale-compat" -> "time";
"transformers-base" -> "base";
"transformers-base" -> "stm";
"transformers-base" -> "transformers";
"transformers-base" -> "transformers-compat";
"transformers-compat" -> "base";
"transformers-compat" -> "ghc-prim";
"transformers-compat" -> "transformers";
"unix-compat" -> "base";
"unix-compat" -> "unix";
"unix-time" -> "base";
"unix-time" -> "binary";
"unix-time" -> "bytestring";
"unix-time" -> "old-time";
"unordered-containers" -> "base";
"unordered-containers" -> "deepseq";
"unordered-containers" -> "hashable";
"uri-bytestring" -> "attoparsec";
"uri-bytestring" -> "base";
"uri-bytestring" -> "blaze-builder";
"uri-bytestring" -> "bytestring";
"uri-bytestring" -> "containers";
"uri-bytestring" -> "template-haskell";
"uri-bytestring" -> "th-lift-instances";
"uuid-types" -> "base";
"uuid-types" -> "binary";
"uuid-types" -> "bytestring";
"uuid-types" -> "deepseq";
"uuid-types" -> "hashable";
"uuid-types" -> "random";
"uuid-types" -> "text";
"vault" -> "base";
"vault" -> "containers";
"vault" -> "hashable";
"vault" -> "unordered-containers";
"vector" -> "base";
"vector" -> "deepseq";
"vector" -> "ghc-prim";
"vector" -> "primitive";
"wai" -> "base";
"wai" -> "blaze-builder";
"wai" -> "bytestring";
"wai" -> "bytestring-builder";
"wai" -> "http-types";
"wai" -> "network";
"wai" -> "text";
"wai" -> "transformers";
"wai" -> "vault";
"wai-extra" -> "aeson";
"wai-extra" -> "ansi-terminal";
"wai-extra" -> "base";
"wai-extra" -> "base64-bytestring";
"wai-extra" -> "blaze-builder";
"wai-extra" -> "bytestring";
"wai-extra" -> "case-insensitive";
"wai-extra" -> "containers";
"wai-extra" -> "cookie";
"wai-extra" -> "data-default-class";
"wai-extra" -> "deepseq";
"wai-extra" -> "directory";
"wai-extra" -> "fast-logger";
"wai-extra" -> "http-types";
"wai-extra" -> "iproute";
"wai-extra" -> "lifted-base";
"wai-extra" -> "network";
"wai-extra" -> "old-locale";
"wai-extra" -> "resourcet";
"wai-extra" -> "streaming-commons";
"wai-extra" -> "stringsearch";
"wai-extra" -> "text";
"wai-extra" -> "time";
"wai-extra" -> "transformers";
"wai-extra" -> "unix";
"wai-extra" -> "unix-compat";
"wai-extra" -> "vault";
"wai-extra" -> "void";
"wai-extra" -> "wai";
"wai-extra" -> "wai-logger";
"wai-extra" -> "word8";
"wai-extra" -> "zlib";
"warp" -> "array";
"warp" -> "async";
"warp" -> "auto-update";
"warp" -> "base";
"warp" -> "blaze-builder";
"warp" -> "bytestring";
"warp" -> "bytestring-builder";
"warp" -> "case-insensitive";
"warp" -> "containers";
"warp" -> "ghc-prim";
"warp" -> "hashable";
"warp" -> "http-date";
"warp" -> "http-types";
"warp" -> "http2";
"warp" -> "iproute";
"warp" -> "network";
"warp" -> "simple-sendfile";
"warp" -> "stm";
"warp" -> "streaming-commons";
"warp" -> "text";
"warp" -> "unix";
"warp" -> "unix-compat";
"warp" -> "vault";
"warp" -> "wai";
"warp" -> "word8";
}
